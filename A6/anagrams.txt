(define order (list #\o #\r #\d #\e #\r)) 
(define sorted-order (list #\d #\e #\o #\r #\r))
(define listen (list #\l #\i #\s #\t #\e #\n))
(define sorted-listen (list #\e #\i #\l #\n #\s #\t))
(define freq-count-order
  (list (list #\o 1) (list #\r 2) (list #\d 1) (list #\e 1)))
(check-expect (sort-chars empty) empty)
(check-expect (sort-chars listen) sorted-listen)
(check-expect (anagrams/sort? "" "") true)
(check-expect (anagrams/sort? "hi" "") false)
(check-expect (anagrams/sort? "" "hi") false)
(check-expect (anagrams/sort? "eleven plus two" "twelve plus one") true)
(check-expect (freq-count empty) empty)
(check-expect (freq-count '(red 7 9 (7 9) red 9))
              '((red 2) (7 1) (9 2) ((7 9) 1)))
(check-expect (freq-equiv? empty empty) true)
(check-expect (freq-equiv? empty '(1 2)) false)
(check-expect (freq-equiv? '(1 2) empty) false)
(check-expect (freq-equiv? '((red 5) (blue 6))
                           '((blue 5) (red 6)))
              false)
(check-expect (freq-equiv? '((blue 5)) '((red 4) (blue 5))) false)
(check-expect (anagrams/count? "" "") true)
(check-expect (anagrams/count? "" "hi") false)
(check-expect (anagrams/count? "hi" "") false)
(check-expect (anagrams/count? "eleven plus two"
                               "twelve plus one") true)