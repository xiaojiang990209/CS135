;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname grades) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #t)))
;;
;; **********************************************
;;   Zijie Jiang (20714726)
;;   CS 135 Fall 2017
;;   Assignment 02, Problem 3
;; **********************************************
;;

;; Useful constants
(define first-midterm-weight 0.1)
(define second-midterm-weight 0.2)
(define final-exam-weight 0.45)
(define assignment-weight 0.2)
(define participation-weight 0.05)
(define total-exam-weight (+ first-midterm-weight second-midterm-weight
                             final-exam-weight))
(define passing-grade 50)
(define minimum-grade 46)

;; (calc-weighted-exam-grade first-midterm second-midterm final-exam)
;;   computes the weighted exam average of cs135
;; calc-weighted-exam-grade: Nat Nat Nat -> Num
;; Example:
(check-expect (calc-weighted-exam-grade 70 75 77) 5665/75)

(define (calc-weighted-exam-grade first-midterm second-midterm final-exam)
  (/ (+ (* first-midterm first-midterm-weight)
        (* second-midterm second-midterm-weight)
        (* final-exam final-exam-weight))
     total-exam-weight))

;; (calc-normal-final-grade weighted-exam assignment participation)
;;   calculates the normal final grade without considering the policy
;;   of simultaneously passing assignment and weighted-exam grade
;; calc-normal-final-grade: Num Nat Nat -> Num
;; requires: weighted-exam >= 0
;; Example:
(check-expect (calc-normal-final-grade 77 85 95) 79.5)

(define (calc-normal-final-grade weighted-exam assignment participation)
  (+ (* weighted-exam total-exam-weight)
     (* assignment assignment-weight)
     (* participation participation-weight)))

;; (final-cs135-grade first-midterm second-midterm final-exam
;;   assignment participation) produces the final grade in the
;;   course based on the exam grades, assignments grades and
;;   participation grade.
;; final-cs135-grade: Nat Nat Nat Nat Nat -> Num
;; Examples:
(check-expect (final-cs135-grade 70 75 77 85 95) 78.4)
(check-expect (final-cs135-grade 50 50 50 45 100) 46)

(define (final-cs135-grade first-midterm second-midterm final-exam
                           assignment participation)
  (cond [(or (< (calc-weighted-exam-grade first-midterm second-midterm final-exam)
                passing-grade)
             (< assignment passing-grade))
         [cond [(> (calc-normal-final-grade
                    (calc-weighted-exam-grade first-midterm second-midterm
                                              final-exam)
                    assignment participation)
                   minimum-grade)
                minimum-grade]
               [else (calc-normal-final-grade
                    (calc-weighted-exam-grade first-midterm second-midterm
                                              final-exam)
                    assignment participation)]]]
         [else (calc-normal-final-grade
                    (calc-weighted-exam-grade first-midterm second-midterm
                                              final-exam)
                    assignment participation)]))

;; Tests:
(check-expect (final-cs135-grade 80 70 75 80 100) 76.75)
(check-expect (final-cs135-grade 50 50 40 30 100) 44)
(check-expect (final-cs135-grade 50 50 50 50 100) 52.5)